// <auto-generated />
using System;
using MagicMirrorIotServer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicMirrorIotServer.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231212093359_AddColumnsToTagTable")]
    partial class AddColumnsToTagTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("deviceeq", "iotserver")
                .IncrementsBy(10);

            modelBuilder.HasSequence("eonnodeeq", "iotserver")
                .IncrementsBy(10);

            modelBuilder.HasSequence("tageq", "iotserver")
                .IncrementsBy(10);

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "deviceeq", "iotserver");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DevicePrototype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EonNodeId")
                        .HasColumnType("int");

                    b.Property<string>("PrototypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("DeviceId", "EonNodeId");

                    b.HasIndex("EonNodeId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.EonNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "eonnodeeq", "iotserver");

                    b.Property<string>("EonNodeId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EonNodeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("EonNodeId");

                    b.ToTable("EonNodes");
                });

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "tageq", "iotserver");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TagType")
                        .HasColumnType("int");

                    b.Property<string>("TagValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("TagId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.Device", b =>
                {
                    b.HasOne("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.EonNode", null)
                        .WithMany("Devices")
                        .HasForeignKey("EonNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.Tag", b =>
                {
                    b.HasOne("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.Device", null)
                        .WithMany("Tags")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.Device", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MagicMirrorIotServer.Domain.AggregateModels.EonNodeAggregate.EonNode", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
